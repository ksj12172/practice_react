{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers'; // 그럼 바로 index.js 가져오나?\n\nimport thunkMiddleware from 'redux-thunk'; //configureStore.js\n\nvar configureStore = function configureStore() {\n  var middlewares = [thunkMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) // 배포용\n  : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["D:/0_0study/react_practice/test/10/prepare/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","reducer","thunkMiddleware","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAAQC,eAAR,EAAyBC,WAAzB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,OAAP,MAAoB,aAApB,C,CAAmC;;AACnC,OAAOC,eAAP,MAA4B,aAA5B,C,CAEA;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,MAAMC,WAAW,GAAG,CAACF,eAAD,CAApB;AACA,MAAMG,QAAQ,GAAG,QACdN,OAAO,CAACF,eAAe,MAAf,SAAmBO,WAAnB,CAAD,CADO,CAC2B;AAD3B,IAEdJ,mBAAmB,CAACH,eAAe,MAAf,SAAmBO,WAAnB,CAAD,CAFtB;AAIA,MAAME,KAAK,GAAGR,WAAW,CAACG,OAAD,EAAUI,QAAV,CAAzB;AACA,SAAOC,KAAP;AACH,CARD;;AAUA,IAAMC,OAAO,GAAGX,aAAa,CAACO,cAAD,EAAiB;AAACK,EAAAA,KAAK;AAAN,CAAjB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from 'next-redux-wrapper';\r\nimport {applyMiddleware, createStore, compose} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport reducer from '../reducers'; // 그럼 바로 index.js 가져오나?\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\n//configureStore.js\r\nconst configureStore = () => {\r\n    const middlewares = [thunkMiddleware];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n     ? compose(applyMiddleware(...middlewares)) // 배포용\r\n     : composeWithDevTools(applyMiddleware(...middlewares));\r\n\r\n    const store = createStore(reducer, enhancer);\r\n    return store;\r\n}\r\n\r\nconst wrapper = createWrapper(configureStore, {debug:process.env.NODE_ENV === 'development'});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}