{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers'; // 그럼 바로 index.js 가져오나?\n\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\n\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log(action);\n      return next(action);\n    };\n  };\n}; //configureStore.js\n\n\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) // 배포용\n  : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["D:/0_0study/react_practice/test/10/prepare/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","reducer","createSagaMiddleware","rootSaga","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAAQC,eAAR,EAAyBC,WAAzB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,OAAP,MAAoB,aAApB,C,CAAmC;;AACnC,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAEC,QAAF,QAAEA,QAAF;AAAA,MAAYC,QAAZ,QAAYA,QAAZ;AAAA,SAA0B,UAACC,IAAD;AAAA,WAAU,UAACC,MAAD,EAAY;AACrEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,aAAOD,IAAI,CAACC,MAAD,CAAX;AACH,KAHkD;AAAA,GAA1B;AAAA,CAAzB,C,CAKA;;;AACA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,MAAMC,cAAc,GAAGV,oBAAoB,EAA3C;AACA,MAAMW,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,MAAME,QAAQ,GAAG,QACdf,OAAO,CAACF,eAAe,MAAf,SAAmBgB,WAAnB,CAAD,CADO,CAC2B;AAD3B,IAEdb,mBAAmB,CAACH,eAAe,MAAf,SAAmBgB,WAAnB,CAAD,CAFtB;AAIA,MAAME,KAAK,GAAGjB,WAAW,CAACG,OAAD,EAAUa,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBd,QAAnB,CAAjB;AACA,SAAOY,KAAP;AACH,CAVD;;AAYA,IAAMG,OAAO,GAAGtB,aAAa,CAACe,cAAD,EAAiB;AAACQ,EAAAA,KAAK;AAAN,CAAjB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from 'next-redux-wrapper';\r\nimport {applyMiddleware, createStore, compose} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport reducer from '../reducers'; // 그럼 바로 index.js 가져오나?\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\n\r\nconst loggerMiddleware = ({dispatch, getState}) => (next) => (action) => {\r\n    console.log(action);\r\n    return next(action);\r\n}\r\n\r\n//configureStore.js\r\nconst configureStore = () => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares = [sagaMiddleware];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n     ? compose(applyMiddleware(...middlewares)) // 배포용\r\n     : composeWithDevTools(applyMiddleware(...middlewares));\r\n\r\n    const store = createStore(reducer, enhancer);\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    return store;\r\n}\r\n\r\nconst wrapper = createWrapper(configureStore, {debug:process.env.NODE_ENV === 'development'});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}