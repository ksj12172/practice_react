{"ast":null,"code":"var _jsxFileName = \"D:\\\\0_0study\\\\react_practice\\\\test\\\\10\\\\prepare\\\\front\\\\components\\\\CommentForm.js\";\nvar __jsx = React.createElement;\nimport { Form, Input, Button } from 'antd';\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useInput';\n\nconst CommentForm = ({\n  post\n}) => {\n  const [commentText, onChangeCommentText] = useInput('');\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n  }, [commentText]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, __jsx(Input.Textarea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["D:/0_0study/react_practice/test/10/prepare/front/components/CommentForm.js"],"names":["Form","Input","Button","React","useCallback","PropTypes","useInput","CommentForm","post","commentText","onChangeCommentText","id","useSelector","state","user","me","onSubmitComment","console","log","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";;AAAA,SAAQA,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,MAAlC;AACA,OAAOC,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAC5B,QAAM,CAACC,WAAD,EAAcC,mBAAd,IAAqCJ,QAAQ,CAAC,EAAD,CAAnD;AAEA,QAAMK,EAAE,GAAGC,WAAW,CAAEC,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeJ,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAMK,eAAe,GAAGZ,WAAW,CAAC,MAAM;AACtCa,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACG,EAAjB,EAAqBF,WAArB;AACH,GAFkC,EAEhC,CAACA,WAAD,CAFgC,CAAnC;AAIA,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEO,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAACG,MAAAA,QAAQ,EAAC,UAAV;AAAsBC,MAAAA,MAAM,EAAC;AAA7B,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEX,WAAvB;AAAoC,IAAA,QAAQ,EAAEC,mBAA9C;AAAmE,IAAA,IAAI,EAAE,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AACXS,MAAAA,QAAQ,EAAC,UADE;AAEXE,MAAAA,KAAK,EAAC,CAFK;AAEFC,MAAAA,MAAM,EAAC,CAAC;AAFN,KAAf;AAGE,IAAA,IAAI,EAAC,SAHP;AAGiB,IAAA,QAAQ,EAAC,QAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ,CADJ;AAWH,CAnBD;;AAqBAf,WAAW,CAACgB,SAAZ,GAAwB;AACpBf,EAAAA,IAAI,EAACH,SAAS,CAACmB,MAAV,CAAiBC;AADF,CAAxB;AAGA,eAAelB,WAAf","sourcesContent":["import {Form, Input, Button} from 'antd';\r\nimport React, {useCallback} from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport useInput from '../hooks/useInput';\r\n\r\nconst CommentForm = ({post}) => {\r\n    const [commentText, onChangeCommentText] = useInput('');\r\n\r\n    const id = useSelector((state) => state.user.me?.id)\r\n    const onSubmitComment = useCallback(() => {\r\n        console.log(post.id, commentText)\r\n    }, [commentText])\r\n\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item style={{position:'relative', margin:0}}>\r\n                <Input.Textarea value={commentText} onChange={onChangeCommentText} rows={4} />\r\n                <Button style={{\r\n                    position:'absolute',\r\n                    right:0, bottom:-40\r\n                }}type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    post:PropTypes.object.isRequired\r\n}\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}