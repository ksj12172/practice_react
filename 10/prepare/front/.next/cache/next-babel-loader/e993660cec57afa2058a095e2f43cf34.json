{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\0_0study\\\\react_practice\\\\test\\\\10\\\\prepare\\\\front\\\\pages\\\\signup.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport AppLayout from '../components/AppLayout';\nimport { Form, Input } from 'antd';\nimport useInput from '../hooks/useInpu.js';\nimport styled from 'styled-components';\n\nvar Signup = function Signup() {\n  _s();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      nickname = _useInput4[0],\n      onChangeNickname = _useInput4[1];\n\n  var _useInput5 = useInput(''),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePassword = _useInput6[1];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      passwordCheck = _useState2[0],\n      setPasswordCheck = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passwordError = _useState4[0],\n      setPasswordError = _useState4[1];\n\n  var onChangePasswordCheck = useCallback(function () {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password);\n  }, [password]);\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785 | NodeBird\")), __jsx(Form, {\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-nick\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }), __jsx(Input, {\n    name: \"user-nick\",\n    value: nick,\n    required: true,\n    onChange: onChangeNick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    value: password,\n    required: true,\n    onChange: onChangePassWord,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password-check\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCCB4\\uD06C\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }), __jsx(Input, {\n    name: \"user-password-check\",\n    value: passwordCheck,\n    type: \"password\",\n    required: true,\n    onChange: onChangePassWordCheck,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }), passwordError && __jsx(ErrorMessage, {\n    style: {\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 39\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4\"))));\n};\n\n_s(Signup, \"2/y4wqtdee6izTPbpcsUUhLzMM0=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["D:/0_0study/react_practice/test/10/prepare/front/pages/signup.js"],"names":["React","AppLayout","Form","Input","useInput","styled","Signup","id","onChangeId","nickname","onChangeNickname","password","onChangePassword","useState","passwordCheck","setPasswordCheck","passwordError","setPasswordError","onChangePasswordCheck","useCallback","e","target","value","onSubmit","nick","onChangeNick","onChangePassWord","onChangePassWordCheck","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport AppLayout from '../components/AppLayout';\r\nimport {Form, Input} from 'antd';\r\nimport useInput from '../hooks/useInpu.js';\r\nimport styled from 'styled-components';\r\n\r\nconst Signup = () => {\r\n    const [id, onChangeId] = useInput('');\r\n    const [nickname, onChangeNickname] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n    const [passwordError, setPasswordError] = useState(false);\r\n\r\n    const onChangePasswordCheck = useCallback(() => {\r\n        setPasswordCheck(e.target.value);\r\n        setPasswordError(e.target.value !== password);\r\n    }, [password]);\r\n\r\n    return (\r\n        <AppLayout>\r\n            <Head>\r\n                <title>회원가입 | NodeBird</title>\r\n            </Head>\r\n            <Form onFinish={onSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"user-id\">아이디</label>\r\n                    <br />\r\n                    <Input name=\"user-id\" value={id} required onChange={onChangeId} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-nick\">닉네임</label>\r\n                    <br />\r\n                    <Input name=\"user-nick\" value={nick} required onChange={onChangeNick} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password\">비밀번호</label>\r\n                    <br />\r\n                    <Input name=\"user-password\" value={password} required onChange={onChangePassWord} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password-check\">비밀번호 체크</label>\r\n                    <br />\r\n                    <Input name=\"user-password-check\" \r\n                        value={passwordCheck} \r\n                        type=\"password\" required onChange={onChangePassWordCheck} />\r\n                    {passwordError && <ErrorMessage style={{color:'red'}}>비밀번호가 일치하지 않습니다</ErrorMessage>}\r\n                </div>\r\n            </Form>\r\n        </AppLayout>\r\n    )\r\n};\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}